name: Flutter Build, Sign, and Distribute

on:
  #push:
    #branches:
      #- main  # Change this to your main branch name
  workflow_dispatch:  # Allow manual triggering

jobs:
  build_sign_and_distribute:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout Flutter App Repository
      uses: actions/checkout@v2
      with:
        repository: xiaoyaocz/dart_simple_live  # Change 'username/flutter-app' to the repository containing your Flutter app
        ref: master  # Change this to the branch containing your Flutter app

    - name: set up java
      uses: actions/setup-java@v3
      with: 
       distribution: 'zulu'
       java-version: '12.x'
       cache: 'gradle'
       
    - name: Set up Flutter...
      uses: subosito/flutter-action@v2
      with:
        flutter-version: '3.19.x'  # Change this to your desired Flutter version
        cache: true
    - name: Install Dependencies
      run: |
       cd simple_live_app
       flutter pub get
    - name: modify build.gradle
      run: echo "plugins {
    id "com.android.application"
    id "kotlin-android"
    id "dev.flutter.flutter-gradle-plugin"
}

def localProperties = new Properties()
def localPropertiesFile = rootProject.file('local.properties')
if (localPropertiesFile.exists()) {
    localPropertiesFile.withReader('UTF-8') { reader ->
        localProperties.load(reader)
    }
}


def flutterVersionCode = localProperties.getProperty('flutter.versionCode')
if (flutterVersionCode == null) {
    flutterVersionCode = '1'
}

def flutterVersionName = localProperties.getProperty('flutter.versionName')
if (flutterVersionName == null) {
    flutterVersionName = '1.0'
}


def keystoreProperties = new Properties()
def keystorePropertiesFile = rootProject.file('key.properties')
if (keystorePropertiesFile.exists()) {
    keystoreProperties.load(new FileInputStream(keystorePropertiesFile))
}

android {
    compileSdkVersion 34
    ndkVersion flutter.ndkVersion

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    kotlinOptions {
        jvmTarget = '1.8'
    }

    sourceSets {
        main.java.srcDirs += 'src/main/kotlin'
    }

    defaultConfig {
        // TODO: Specify your own unique Application ID (https://developer.android.com/studio/build/application-id.html).
        applicationId "com.xycz.simple_live"
        // You can update the following values to match your application needs.
        // For more information, see: https://docs.flutter.dev/deployment/android#reviewing-the-gradle-build-configuration.
        minSdkVersion 21
        multiDexEnabled true
        targetSdkVersion flutter.targetSdkVersion
        versionCode flutterVersionCode.toInteger()
        versionName flutterVersionName
    }

    packagingOptions {
        pickFirst 'lib/**/libc++_shared.so'
    }
    signingConfigs {
       //release {
      //     keyAlias keystoreProperties['keyAlias']
        //   keyPassword keystoreProperties['keyPassword']
        //   storeFile keystoreProperties['storeFile'] ? file(keystoreProperties['storeFile']) : null
        //   storePassword keystoreProperties['storePassword']
         //  v1SigningEnabled true
         //  v2SigningEnabled true
       //}
    }
    buildTypes {
        buildTypes {
            debug {
                //signingConfig signingConfigs.release
            }
            profile {
               // signingConfig signingConfigs.release
            }
            release {
               // signingConfig signingConfigs.release
                minifyEnabled true
                shrinkResources true
                proguardFiles getDefaultProguardFile(
                        'proguard-android-optimize.txt'),
                        'proguard-rules.pro'
            }
        }
    }
}

flutter {
    source '../..'
}

dependencies {
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:1.7.10"
}" > simple_live_app/android/app/build.gradle
    - name: Build APK
      run: |
       cd simple_live_app
       flutter build apk
       ls build/app/outputs/flutter-apk
      
    #- name: Sign APK
    #  run: |
    #    jarsigner -verbose -sigalg SHA1withRSA -digestalg SHA1 -keystore your.keystore -storepass ${{ secrets.KEYSTORE_PASSWORD }} -keypass ${{ secrets.KEY_PASSWORD }} -signedjar build/app/outputs/flutter-apk/app-release-signed.apk build/app/outputs/flutter-apk/app-release-unsigned.apk alias_name
    #0    ${ANDROID_HOME}/build-tools/*/zipalign -v 4 build/app/outputs/flutter-apk/app-release-signed.apk build/app/outputs/flutter-apk/app-release-signed-aligned.apk

    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: v1.0.0  # Change this to your release tag name
        release_name: Release v1.0.0  # Change this to your release name
        draft: false
        prerelease: false

    - name: Upload APK
      id: upload-release-asset
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: build/app/outputs/flutter-apk
        asset_content_type: application/vnd.android.package-archive
